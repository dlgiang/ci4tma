version: '2'
services:
  phabricator:
    restart: always
    privileged: true
    ports:
     - "443:443"
     - "80:80"
     - "2222:22"
    volumes:
     - CI4TMA_HOME/phab/repos:/repos
     - CI4TMA_HOME/phab/extensions:/srv/phabricator/phabricator/src/extensions
     - CI4TMA_HOME/phab/sshkeys:/sshkeys
     - CI4TMA_HOME/phab/filestore:/filestore
    depends_on:
     - mysql
    links:
     - mysql
    environment:
     - MYSQL_HOST=mysql
     - MYSQL_USER=root
     - MYSQL_PASS=phabricator
     - PHABRICATOR_REPOSITORY_PATH=/repos
     - PHABRICATOR_HOST=HOST_IP
     - PHABRICATOR_HOST_KEYS_PATH=/sshkeys
     - PHABRICATOR_STORAGE_TYPE=disk
     - PHABRICATOR_STORAGE_PATH=/filestore
     - PHABRICATOR_VCS_PORT=2222
     - ENABLE_APCU=true
    image: redpointgames/phabricator
  mysql:
    restart: always
    privileged: true
    volumes:
     - CI4TMA_HOME/phab/mysql:/var/lib/mysql
     - CI4TMA_HOME/phab/mycnf:/etc/mysql/conf.d
    image: mysql:5.7.14
    environment:
     - MYSQL_ROOT_PASSWORD=phabricator
  jenkins:
    restart: always
    image: jenkinsci/jenkins:lts
    ports:
      - "8080:8080"
    volumes:
      - CI4TMA_HOME/jenkins:/var/jenkins_home
    environment:
      - JAVA_OPTS=-Dhttp.proxyHost=<proxyHost IP> -Dhttp.proxyPort= <Proxy Port> -Dhttps.proxyHost= <proxyHost IP> -Dhttps.proxyPort= <Port>
  artifactory:
    image: docker.bintray.io/jfrog/artifactory-oss:latest
    ports:
     - "8081:8081"
    volumes:
     - CI4TMA_HOME/artifactory:/var/opt/jfrog/artifactory
    restart: always
  sonarqube:
    restart: always
    image: sonarqube
    ports:
      - "9000:9000"
    networks:
      - sonarnet
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://postgre:5432/sonar
    volumes:
      - CI4TMA_HOME/sonarqube/conf:/opt/sonarqube/conf
      - CI4TMA_HOME/sonarqube/data:/opt/sonarqube/data
      - CI4TMA_HOME/sonarqube/extensions:/opt/sonarqube/extensions
      - CI4TMA_HOME/sonarqube/bundled-plugins:/opt/sonarqube/lib/bundled-plugins
  postgre:
    restart: always
    image: postgres
    networks:
      - sonarnet
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - CI4TMA_HOME/sonarqube/postgresql:/var/lib/postgresql
      - CI4TMA_HOME/sonarqube/postgresql/data:/var/lib/postgresql/data
networks:
  sonarnet:
    driver: bridge

